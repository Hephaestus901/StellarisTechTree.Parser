//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from d:\Projects\.Net\StellarisTechTree\TestApp\Stellaris.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.CLSCompliant(false)]
public partial class StellarisLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, BOOLEAN=3, VARIABLE=4, SPECIFIER=5, NUMBER=6, DATE=7, 
		BAREWORD=8, STRING=9, WS=10, LINE_COMMENT=11;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "BOOLEAN", "VARIABLE", "SPECIFIER", "NUMBER", "DATE", 
		"BAREWORD", "STRING", "WS", "LINE_COMMENT"
	};


	public StellarisLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public StellarisLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'{'", "'}'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, "BOOLEAN", "VARIABLE", "SPECIFIER", "NUMBER", "DATE", 
		"BAREWORD", "STRING", "WS", "LINE_COMMENT"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Stellaris.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static StellarisLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\r', '\x91', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x3', '\x2', '\x3', '\x2', '\x3', 
		'\x3', '\x3', '\x3', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', 
		'\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', 
		'\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', 
		'\x4', '\x5', '\x4', ',', '\n', '\x4', '\x3', '\x5', '\x3', '\x5', '\x3', 
		'\x5', '\a', '\x5', '\x31', '\n', '\x5', '\f', '\x5', '\xE', '\x5', '\x34', 
		'\v', '\x5', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', 
		'\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x5', '\x6', '>', '\n', 
		'\x6', '\x3', '\a', '\x5', '\a', '\x41', '\n', '\a', '\x3', '\a', '\x6', 
		'\a', '\x44', '\n', '\a', '\r', '\a', '\xE', '\a', '\x45', '\x3', '\a', 
		'\x3', '\a', '\x5', '\a', 'J', '\n', '\a', '\x3', '\a', '\x6', '\a', 'M', 
		'\n', '\a', '\r', '\a', '\xE', '\a', 'N', '\x3', '\a', '\x3', '\a', '\x6', 
		'\a', 'S', '\n', '\a', '\r', '\a', '\xE', '\a', 'T', '\x3', '\a', '\x5', 
		'\a', 'X', '\n', '\a', '\x3', '\a', '\x6', '\a', '[', '\n', '\a', '\r', 
		'\a', '\xE', '\a', '\\', '\x5', '\a', '_', '\n', '\a', '\x3', '\b', '\x6', 
		'\b', '\x62', '\n', '\b', '\r', '\b', '\xE', '\b', '\x63', '\x3', '\b', 
		'\x3', '\b', '\x6', '\b', 'h', '\n', '\b', '\r', '\b', '\xE', '\b', 'i', 
		'\x3', '\b', '\x3', '\b', '\x6', '\b', 'n', '\n', '\b', '\r', '\b', '\xE', 
		'\b', 'o', '\x3', '\t', '\x3', '\t', '\a', '\t', 't', '\n', '\t', '\f', 
		'\t', '\xE', '\t', 'w', '\v', '\t', '\x3', '\n', '\x3', '\n', '\a', '\n', 
		'{', '\n', '\n', '\f', '\n', '\xE', '\n', '~', '\v', '\n', '\x3', '\n', 
		'\x3', '\n', '\x3', '\v', '\x6', '\v', '\x83', '\n', '\v', '\r', '\v', 
		'\xE', '\v', '\x84', '\x3', '\v', '\x3', '\v', '\x3', '\f', '\x3', '\f', 
		'\a', '\f', '\x8B', '\n', '\f', '\f', '\f', '\xE', '\f', '\x8E', '\v', 
		'\f', '\x3', '\f', '\x3', '\f', '\x2', '\x2', '\r', '\x3', '\x3', '\x5', 
		'\x4', '\a', '\x5', '\t', '\x6', '\v', '\a', '\r', '\b', '\xF', '\t', 
		'\x11', '\n', '\x13', '\v', '\x15', '\f', '\x17', '\r', '\x3', '\x2', 
		'\n', '\x4', '\x2', '\x43', '\\', '\x63', '|', '\b', '\x2', '\'', '\'', 
		'/', '\x30', '\x32', ';', '\x43', '\\', '\x61', '\x61', '\x63', '|', '\x4', 
		'\x2', '>', '>', '@', '@', '\x3', '\x2', '\x32', ';', '\b', '\x2', '\'', 
		'\'', '/', '\x30', '\x32', ';', '\x42', '\\', '\x61', '\x61', '\x63', 
		'|', '\x3', '\x2', '$', '$', '\x5', '\x2', '\v', '\f', '\xF', '\xF', '\"', 
		'\"', '\x4', '\x2', '\f', '\f', '\xF', '\xF', '\x2', '\xA8', '\x2', '\x3', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x5', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\a', '\x3', '\x2', '\x2', '\x2', '\x2', '\t', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\v', '\x3', '\x2', '\x2', '\x2', '\x2', '\r', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\xF', '\x3', '\x2', '\x2', '\x2', '\x2', '\x11', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x13', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x15', '\x3', '\x2', '\x2', '\x2', '\x2', '\x17', '\x3', '\x2', 
		'\x2', '\x2', '\x3', '\x19', '\x3', '\x2', '\x2', '\x2', '\x5', '\x1B', 
		'\x3', '\x2', '\x2', '\x2', '\a', '+', '\x3', '\x2', '\x2', '\x2', '\t', 
		'-', '\x3', '\x2', '\x2', '\x2', '\v', '=', '\x3', '\x2', '\x2', '\x2', 
		'\r', '^', '\x3', '\x2', '\x2', '\x2', '\xF', '\x61', '\x3', '\x2', '\x2', 
		'\x2', '\x11', 'q', '\x3', '\x2', '\x2', '\x2', '\x13', 'x', '\x3', '\x2', 
		'\x2', '\x2', '\x15', '\x82', '\x3', '\x2', '\x2', '\x2', '\x17', '\x88', 
		'\x3', '\x2', '\x2', '\x2', '\x19', '\x1A', '\a', '}', '\x2', '\x2', '\x1A', 
		'\x4', '\x3', '\x2', '\x2', '\x2', '\x1B', '\x1C', '\a', '\x7F', '\x2', 
		'\x2', '\x1C', '\x6', '\x3', '\x2', '\x2', '\x2', '\x1D', '\x1E', '\a', 
		'{', '\x2', '\x2', '\x1E', '\x1F', '\a', 'g', '\x2', '\x2', '\x1F', ',', 
		'\a', 'u', '\x2', '\x2', ' ', '!', '\a', 'p', '\x2', '\x2', '!', ',', 
		'\a', 'q', '\x2', '\x2', '\"', '#', '\a', 'v', '\x2', '\x2', '#', '$', 
		'\a', 't', '\x2', '\x2', '$', '%', '\a', 'w', '\x2', '\x2', '%', ',', 
		'\a', 'g', '\x2', '\x2', '&', '\'', '\a', 'h', '\x2', '\x2', '\'', '(', 
		'\a', '\x63', '\x2', '\x2', '(', ')', '\a', 'n', '\x2', '\x2', ')', '*', 
		'\a', 'u', '\x2', '\x2', '*', ',', '\a', 'g', '\x2', '\x2', '+', '\x1D', 
		'\x3', '\x2', '\x2', '\x2', '+', ' ', '\x3', '\x2', '\x2', '\x2', '+', 
		'\"', '\x3', '\x2', '\x2', '\x2', '+', '&', '\x3', '\x2', '\x2', '\x2', 
		',', '\b', '\x3', '\x2', '\x2', '\x2', '-', '.', '\a', '\x42', '\x2', 
		'\x2', '.', '\x32', '\t', '\x2', '\x2', '\x2', '/', '\x31', '\t', '\x3', 
		'\x2', '\x2', '\x30', '/', '\x3', '\x2', '\x2', '\x2', '\x31', '\x34', 
		'\x3', '\x2', '\x2', '\x2', '\x32', '\x30', '\x3', '\x2', '\x2', '\x2', 
		'\x32', '\x33', '\x3', '\x2', '\x2', '\x2', '\x33', '\n', '\x3', '\x2', 
		'\x2', '\x2', '\x34', '\x32', '\x3', '\x2', '\x2', '\x2', '\x35', '>', 
		'\a', '?', '\x2', '\x2', '\x36', '\x37', '\a', '>', '\x2', '\x2', '\x37', 
		'>', '\a', '@', '\x2', '\x2', '\x38', '>', '\t', '\x4', '\x2', '\x2', 
		'\x39', ':', '\a', '>', '\x2', '\x2', ':', '>', '\a', '?', '\x2', '\x2', 
		';', '<', '\a', '@', '\x2', '\x2', '<', '>', '\a', '?', '\x2', '\x2', 
		'=', '\x35', '\x3', '\x2', '\x2', '\x2', '=', '\x36', '\x3', '\x2', '\x2', 
		'\x2', '=', '\x38', '\x3', '\x2', '\x2', '\x2', '=', '\x39', '\x3', '\x2', 
		'\x2', '\x2', '=', ';', '\x3', '\x2', '\x2', '\x2', '>', '\f', '\x3', 
		'\x2', '\x2', '\x2', '?', '\x41', '\a', '/', '\x2', '\x2', '@', '?', '\x3', 
		'\x2', '\x2', '\x2', '@', '\x41', '\x3', '\x2', '\x2', '\x2', '\x41', 
		'\x43', '\x3', '\x2', '\x2', '\x2', '\x42', '\x44', '\t', '\x5', '\x2', 
		'\x2', '\x43', '\x42', '\x3', '\x2', '\x2', '\x2', '\x44', '\x45', '\x3', 
		'\x2', '\x2', '\x2', '\x45', '\x43', '\x3', '\x2', '\x2', '\x2', '\x45', 
		'\x46', '\x3', '\x2', '\x2', '\x2', '\x46', 'G', '\x3', '\x2', '\x2', 
		'\x2', 'G', '_', '\a', '\'', '\x2', '\x2', 'H', 'J', '\a', '/', '\x2', 
		'\x2', 'I', 'H', '\x3', '\x2', '\x2', '\x2', 'I', 'J', '\x3', '\x2', '\x2', 
		'\x2', 'J', 'L', '\x3', '\x2', '\x2', '\x2', 'K', 'M', '\t', '\x5', '\x2', 
		'\x2', 'L', 'K', '\x3', '\x2', '\x2', '\x2', 'M', 'N', '\x3', '\x2', '\x2', 
		'\x2', 'N', 'L', '\x3', '\x2', '\x2', '\x2', 'N', 'O', '\x3', '\x2', '\x2', 
		'\x2', 'O', 'P', '\x3', '\x2', '\x2', '\x2', 'P', 'R', '\a', '\x30', '\x2', 
		'\x2', 'Q', 'S', '\t', '\x5', '\x2', '\x2', 'R', 'Q', '\x3', '\x2', '\x2', 
		'\x2', 'S', 'T', '\x3', '\x2', '\x2', '\x2', 'T', 'R', '\x3', '\x2', '\x2', 
		'\x2', 'T', 'U', '\x3', '\x2', '\x2', '\x2', 'U', '_', '\x3', '\x2', '\x2', 
		'\x2', 'V', 'X', '\a', '/', '\x2', '\x2', 'W', 'V', '\x3', '\x2', '\x2', 
		'\x2', 'W', 'X', '\x3', '\x2', '\x2', '\x2', 'X', 'Z', '\x3', '\x2', '\x2', 
		'\x2', 'Y', '[', '\t', '\x5', '\x2', '\x2', 'Z', 'Y', '\x3', '\x2', '\x2', 
		'\x2', '[', '\\', '\x3', '\x2', '\x2', '\x2', '\\', 'Z', '\x3', '\x2', 
		'\x2', '\x2', '\\', ']', '\x3', '\x2', '\x2', '\x2', ']', '_', '\x3', 
		'\x2', '\x2', '\x2', '^', '@', '\x3', '\x2', '\x2', '\x2', '^', 'I', '\x3', 
		'\x2', '\x2', '\x2', '^', 'W', '\x3', '\x2', '\x2', '\x2', '_', '\xE', 
		'\x3', '\x2', '\x2', '\x2', '`', '\x62', '\t', '\x5', '\x2', '\x2', '\x61', 
		'`', '\x3', '\x2', '\x2', '\x2', '\x62', '\x63', '\x3', '\x2', '\x2', 
		'\x2', '\x63', '\x61', '\x3', '\x2', '\x2', '\x2', '\x63', '\x64', '\x3', 
		'\x2', '\x2', '\x2', '\x64', '\x65', '\x3', '\x2', '\x2', '\x2', '\x65', 
		'g', '\a', '\x30', '\x2', '\x2', '\x66', 'h', '\t', '\x5', '\x2', '\x2', 
		'g', '\x66', '\x3', '\x2', '\x2', '\x2', 'h', 'i', '\x3', '\x2', '\x2', 
		'\x2', 'i', 'g', '\x3', '\x2', '\x2', '\x2', 'i', 'j', '\x3', '\x2', '\x2', 
		'\x2', 'j', 'k', '\x3', '\x2', '\x2', '\x2', 'k', 'm', '\a', '\x30', '\x2', 
		'\x2', 'l', 'n', '\t', '\x5', '\x2', '\x2', 'm', 'l', '\x3', '\x2', '\x2', 
		'\x2', 'n', 'o', '\x3', '\x2', '\x2', '\x2', 'o', 'm', '\x3', '\x2', '\x2', 
		'\x2', 'o', 'p', '\x3', '\x2', '\x2', '\x2', 'p', '\x10', '\x3', '\x2', 
		'\x2', '\x2', 'q', 'u', '\t', '\x2', '\x2', '\x2', 'r', 't', '\t', '\x6', 
		'\x2', '\x2', 's', 'r', '\x3', '\x2', '\x2', '\x2', 't', 'w', '\x3', '\x2', 
		'\x2', '\x2', 'u', 's', '\x3', '\x2', '\x2', '\x2', 'u', 'v', '\x3', '\x2', 
		'\x2', '\x2', 'v', '\x12', '\x3', '\x2', '\x2', '\x2', 'w', 'u', '\x3', 
		'\x2', '\x2', '\x2', 'x', '|', '\a', '$', '\x2', '\x2', 'y', '{', '\n', 
		'\a', '\x2', '\x2', 'z', 'y', '\x3', '\x2', '\x2', '\x2', '{', '~', '\x3', 
		'\x2', '\x2', '\x2', '|', 'z', '\x3', '\x2', '\x2', '\x2', '|', '}', '\x3', 
		'\x2', '\x2', '\x2', '}', '\x7F', '\x3', '\x2', '\x2', '\x2', '~', '|', 
		'\x3', '\x2', '\x2', '\x2', '\x7F', '\x80', '\a', '$', '\x2', '\x2', '\x80', 
		'\x14', '\x3', '\x2', '\x2', '\x2', '\x81', '\x83', '\t', '\b', '\x2', 
		'\x2', '\x82', '\x81', '\x3', '\x2', '\x2', '\x2', '\x83', '\x84', '\x3', 
		'\x2', '\x2', '\x2', '\x84', '\x82', '\x3', '\x2', '\x2', '\x2', '\x84', 
		'\x85', '\x3', '\x2', '\x2', '\x2', '\x85', '\x86', '\x3', '\x2', '\x2', 
		'\x2', '\x86', '\x87', '\b', '\v', '\x2', '\x2', '\x87', '\x16', '\x3', 
		'\x2', '\x2', '\x2', '\x88', '\x8C', '\a', '%', '\x2', '\x2', '\x89', 
		'\x8B', '\n', '\t', '\x2', '\x2', '\x8A', '\x89', '\x3', '\x2', '\x2', 
		'\x2', '\x8B', '\x8E', '\x3', '\x2', '\x2', '\x2', '\x8C', '\x8A', '\x3', 
		'\x2', '\x2', '\x2', '\x8C', '\x8D', '\x3', '\x2', '\x2', '\x2', '\x8D', 
		'\x8F', '\x3', '\x2', '\x2', '\x2', '\x8E', '\x8C', '\x3', '\x2', '\x2', 
		'\x2', '\x8F', '\x90', '\b', '\f', '\x3', '\x2', '\x90', '\x18', '\x3', 
		'\x2', '\x2', '\x2', '\x15', '\x2', '+', '\x32', '=', '@', '\x45', 'I', 
		'N', 'T', 'W', '\\', '^', '\x63', 'i', 'o', 'u', '|', '\x84', '\x8C', 
		'\x4', '\b', '\x2', '\x2', '\x2', '\x3', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
