//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from d:\Projects\.Net\StellarisTechTree\src\StellarisTechTree.WebApp\Stellaris.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System.CodeDom.Compiler;
using System.Diagnostics;
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;

namespace StellarisTechTree.Infrastructure.Antlr.Stellaris;

/// <summary>
/// This class provides an empty implementation of <see cref="IStellarisVisitor{Result}"/>,
/// which can be extended to create a visitor which only needs to handle a subset
/// of the available methods.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[GeneratedCode("ANTLR", "4.9.2")]
[DebuggerNonUserCode]
[CLSCompliant(false)]
public partial class StellarisBaseVisitor<Result> : AbstractParseTreeVisitor<Result>, IStellarisVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="StellarisParser.file"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitFile([NotNull] StellarisParser.FileContext context) { return this.VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="StellarisParser.map"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitMap([NotNull] StellarisParser.MapContext context) { return this.VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="StellarisParser.pair"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitPair([NotNull] StellarisParser.PairContext context) { return this.VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="StellarisParser.var"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitVar([NotNull] StellarisParser.VarContext context) { return this.VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="StellarisParser.array"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitArray([NotNull] StellarisParser.ArrayContext context) { return this.VisitChildren(context); }
	/// <summary>
	/// Visit a parse tree produced by <see cref="StellarisParser.value"/>.
	/// <para>
	/// The default implementation returns the result of calling <see cref="AbstractParseTreeVisitor{Result}.VisitChildren(IRuleNode)"/>
	/// on <paramref name="context"/>.
	/// </para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	public virtual Result VisitValue([NotNull] StellarisParser.ValueContext context) { return this.VisitChildren(context); }
}